function f_psad {
  echo "[$SCRIPT_COUNT] Enable psad"

  if ! test -f "$PSADCONF"; then
    echo "$PSADCONF does not exist."

    if ! dpkg -l | grep psad 2> /dev/null 1>&2; then
      echo 'psad package is not installed.'
    fi

    return
  fi
  
  ### PSAD Configuration
  echo -e "127.0.0.1    0; \n$VPSIP    0;" >> $PSADDL
    
  sed -i 's/EMAIL_ADDRESSES             root@localhost;/EMAIL_ADDRESSES             '$MYEMAIL';/' $PSADCONF
  sed -i 's/HOSTNAME                    _CHANGEME_;/HOSTNAME                    '$MYHOS.$MYDOM';/' $PSADCONF
  sed -i 's/ENABLE_AUTO_IDS             N;/ENABLE_AUTO_IDS               Y;/' $PSADCONF       #### Run as PSAD and IDS/IPS too :)
  sed -i 's/DANGER_LEVEL2               15;/DANGER_LEVEL2               15;/' $PSADCONF
  sed -i 's/DANGER_LEVEL3               150;/DANGER_LEVEL3               150;/' $PSADCONF
  sed -i 's/DANGER_LEVEL4               1500;/DANGER_LEVEL4               1500;/' $PSADCONF
  sed -i 's/DANGER_LEVEL5               10000;/DANGER_LEVEL5               10000;/' $PSADCONF
  sed -i 's/EMAIL_ALERT_DANGER_LEVEL    1;/EMAIL_ALERT_DANGER_LEVEL    5;/' $PSADCONF
  sed -i 's/EMAIL_LIMIT                 0;/EMAIL_LIMIT                 1;/' $PSADCONF
  sed -i 's/EMAIL_LIMIT_STATUS_MSG      Y;/EMAIL_LIMIT_STATUS_MSG      N;/' $PSADCONF
  sed -i 's/EXPECT_TCP_OPTIONS             *;/EXPECT_TCP_OPTIONS             Y;/' $PSADCONF
  sed -i 's/ENABLE_MAC_ADDR_REPORTING   N;/ENABLE_MAC_ADDR_REPORTING   Y;/' $PSADCONF
  sed -i 's/AUTO_IDS_DANGER_LEVEL       5;/AUTO_IDS_DANGER_LEVEL       1;/' $PSADCONF
  sed -i 's/ENABLE_AUTO_IDS_EMAILS      ;/ENABLE_AUTO_IDS_EMAILS      Y;/' $PSADCONF
  sed -i 's/IGNORE_PORTS             *;/IGNORE_PORTS             NONE;/' $PSADCONF      #### Add PORTS TO BE IGNORED by PSAD
  sed -i 's/IPT_SYSLOG_FILE             \/var\/log\/messages;/IPT_SYSLOG_FILE             \/var\/log\/ufw.log;/' $PSADCONF

  ######## IF USE THIS SERVER ON LOCAL NETWORK (NOT CLOUD SERVER) NEED UNCOMMENT THIS ########
  #sed -i 's/HOME_NET                    any;/HOME_NET                    192.168.1.0\/24;/' $PSADCONF
  #sed -i 's/EXTERNAL_NET                    *;/EXTERNAL_NET                    any;/' $PSADCONF
  
  for admin in $FW_ADMIN; do  
    ufw reload
    psad -R
    psad --sig-update
    psad -H
    psad -R
    sleep 2
    # Analyze it
    psad --fw-analyze
  done

  if [[ $VERBOSE == "Y" ]]; then
    systemctl status psad.service --no-pager
    psad -v
    echo
  fi

  ((SCRIPT_COUNT++))
}
